! function(a, b, c) { "use strict";
    var d = function(a) {
            for (var b = 0; b < a.length; b++) f(a[0].tracking) },
        e = { media_type: "video/mp4", media: ".mp4", media_bitrate_min: 200, media_bitrate_max: 2e3 },
        f = function(b, c, d) {
            if ("" !== b) {
                var e = !1;
                if (!e && "undefined" != typeof XMLHttpRequest) try { e = new XMLHttpRequest } catch (a) { e = !1 }
                if (!e && a.createRequest) try { e = a.createRequest() } catch (a) { e = !1 }
                return 0 != e && ("function" == typeof c && (e.onreadystatechange = function() {
                    if (4 == e.readyState && 200 == e.status) return c(d, e.responseText) }), e.open("GET", b, !0), e.send(null), e.responseText) }
            return !1 },
        g = function(b) {
            if (a.DOMParser) var c = new DOMParser,
                d = c.parseFromString(b, "text/xml");
            else {
                var d = new ActiveXObject("Microsoft.XMLDOM");
                d.async = !1, d.loadXML(b) }
            return d.childNodes[0] },
        h = function(a, b) {
            if (b.getElementsByTagName(a).length >= 1) {
                if ("Impression" != a && "ClickTracking" != a && "ClickThrough" != a && "NonLinearClickThrough" != a) return b.getElementsByTagName(a)[0].textContent;
                for (var c = new Array, d = 0; d < b.getElementsByTagName(a).length; d++) c[d] = b.getElementsByTagName(a)[d].textContent;
                return c }
            return "" },
        i = function(a, b) {
            return b.getElementsByTagName(a).length >= 1 ? b.getElementsByTagName(a) : "" },
        j = function(a) {
            for (var b = 0; b < a.unParseTracking.length; b++) {
                var c = a.unParseTracking[b].getAttribute("event"),
                    d = -1; "creativeView" == c ? d = 0 : "start" == c ? d = 0 : "firstQuartile" == c ? d = a.duration / 4 : "midpoint" == c ? d = a.duration / 2 : "thirdQuartile" == c ? d = 3 * a.duration / 4 : "complete" == c ? d = a.duration : "close" == c ? a.trackingEvent.close = a.unParseTracking[b].textContent.replace("<![CDATA[", "").replace("]]>", "") : "collapse" == c ? a.trackingEvent.collapse = a.unParseTracking[b].textContent.replace("<![CDATA[", "").replace("]]>", "") : "expand" == c ? a.trackingEvent.expand = a.unParseTracking[b].textContent.replace("<![CDATA[", "").replace("]]>", "") : "skip" == c && (a.trackingEvent.skip = a.unParseTracking[b].textContent.replace("<![CDATA[", "").replace("]]>", "")), d != -1 && a.trackingEvent.push({ is_track: 0, time: d, link: a.unParseTracking[b].textContent.replace("<![CDATA[", "").replace("]]>", "") }) }
            for (var e = 0; e < a.impression.length; e++) a.trackingEvent.push({ is_track: 0, time: 0, link: a.impression[e].impression });
            delete a.unParseTracking, delete a.wrapper_tracking, delete a.vast_xml, delete a.impression, delete a.vast },
        k = function(a, b) {
            var c;
            for (c = 0; c < b.length; ++c) a.push(b[c]);
            return a },
        l = function(a, b) { a.vast_xml = g(b), a.wrapper_tracking = i("Tracking", a.vast_xml), k(a.unParseTracking, a.wrapper_tracking);
            var c = h("Impression", a.vast_xml);
            if (c)
                for (var d = 0; d < c.length; d++) a.impression.push({ impression: c[d] });
            var m = h("ClickTracking", a.vast_xml);
            if (m)
                for (var d = 0; d < m.length; d++) a.ClickTracking.push({ tracking: m[d] });
            var n = h("ClickThrough", a.vast_xml);
            if (n)
                for (var d = 0; d < n.length; d++) a.ClickThrough.push({ tracking: n[d] });
            if (i("NonLinear", a.vast_xml)) {
                var o = h("NonLinearClickThrough", a.vast_xml);
                if (o)
                    for (var d = 0; d < o.length; d++) a.ClickThrough.push({ tracking: o[d] }) }
            var p = h("VASTAdTagURI", a.vast_xml);
            if (p) {
                var q = decodeURIComponent(p);
                f(q, l, a) } else {
                var s = i("MediaFile", a.vast_xml);
                if (s) {
                    for (var d = 0; d < s.length; d++)
                        if (s[d].getAttribute("type") == e.media_type && s[d].getAttribute("bitrate") > e.media_bitrate_min && s[d].getAttribute("bitrate") < e.media_bitrate_max && s[d].childNodes[0].nodeValue.indexOf(e.media) >= 0) { a.vast_src = s[d].childNodes[0].nodeValue;
                            break } } else {
                    var t = h("StaticResource", a.vast_xml);
                    t && (a.vast_src = t) }
                if (!a.duration) {
                    var u = h("Duration", a.vast_xml),
                        v = u.split(":");
                    a.duration = 60 * +v[0] * 60 + 60 * +v[1] + +v[2] }
                a.duration && a.vast_src && j(a) } },
        m = function(a, b) { a.impression = [], l(a, b) },
        n = function(a) {
            var b, c, d;
            for (c = 1; c < arguments.length; c++) { b = arguments[c];
                for (d in b) b.hasOwnProperty(d) && (a[d] = b[d]) }
            return a },
        o = { skip: 5, skipDefault: 5 },
        p = function(b, c) {
            return { createSourceObjects: function(c) {
                    var e, f, g, d = {},
                        h = b.options().techOrder;
                    for (e = 0, f = h.length; e < f; e++) {
                        var i = h[e].charAt(0).toUpperCase() + h[e].slice(1);
                        if (g = a.videojs[i], g && g.isSupported())
                            for (var j = 0, k = c.length; j < k; j++) {
                                var l = c[j],
                                    m = { type: l.mimeType, src: l.fileURL };
                                g.canPlaySource(m) && (void 0 === d[h[e]] && (d[h[e]] = []), d[h[e]].push({ type: l.mimeType, src: l.fileURL, width: l.width, height: l.height })) } }
                    var n = [];
                    for (f = 0; f < h.length; f++)
                        if (g = h[f], void 0 !== d[g])
                            for (e = 0; e < d[g].length; e++) n.push(d[g][e]);
                    return n }, getPrerollContent: function() {
                    if ("wait" == c.banner.status) {
                        for (var a = 0; a < c.banner.preroll.length; a++)
                            if ("wait" === c.banner.preroll[a].status) {
                                if (c.banner.tracking_vast = c.banner.preroll[a].trackingEvent, c.durationAd = c.banner.preroll[a].duration, c.skip = c.banner.preroll[a].skipoffset, c.banner.ClickTracking = c.banner.preroll[a].ClickTracking, c.banner.ClickThrough = c.banner.preroll[a].ClickThrough, b.vast.sources = c.banner.preroll[a].vast_src, c.banner.preroll[a].status = "run", c.banner.preroll.total--, c.banner.preroll[a].vast_src) { c.banner.status = "ready";
                                    break }
                                0 == c.banner.preroll.total && (b.on("timeupdate", b.vast.timeUpdateToMidroll), c.banner.current = "midroll") }
                            "ready" == c.banner.status && b.trigger("readyforpreroll") } }, getMidrollContent: function() {
                    if ("wait" == c.banner.status) {
                        for (var a = 0; a < c.banner.midroll.length; a++)
                            if ("ready" === c.banner.midroll[a].status) {
                                if (c.banner.tracking_vast = c.banner.midroll[a].trackingEvent, c.durationAd = c.banner.midroll[a].duration, c.skip = c.banner.preroll[a].skipoffset, c.banner.ClickTracking = c.banner.midroll[a].ClickTracking, c.banner.ClickThrough = c.banner.midroll[a].ClickThrough, b.vast.sources = c.banner.midroll[a].vast_src, c.banner.midroll[a].status = "run", c.banner.midroll.total--, 0 == c.banner.midroll.total && b.off("timeupdate", b.vast.timeUpdateToMidroll), c.banner.midroll[a].vast_src) { c.banner.status = "ready";
                                    break }
                                0 == c.banner.midroll.total && (b.off("timeupdate", b.vast.timeUpdateToMidroll), b.on("timeupdate", b.vast.timeUpdateToPostroll), c.banner.current = "postroll") }
                            "ready" == c.banner.status && b.trigger("readyforpreroll") } }, getPostrollContent: function() {
                    if ("wait" == c.banner.status) {
                        for (var a = 0; a < c.banner.postroll.length; a++)
                            if ("wait" === c.banner.postroll[a].status) {
                                if (c.banner.tracking_vast = c.banner.postroll[a].trackingEvent, c.durationAd = c.banner.postroll[a].duration, c.skip = c.banner.preroll[a].skipoffset, c.banner.ClickTracking = c.banner.postroll[a].ClickTracking, c.banner.ClickThrough = c.banner.postroll[a].ClickThrough, b.vast.sources = c.banner.postroll[a].vast_src, c.banner.postroll[a].status = "run", c.banner.postroll.total--, 0 == c.banner.postroll.total && b.off("timeupdate", b.vast.timeUpdateToPostroll), c.banner.postroll[a].vast_src) { c.banner.status = "ready";
                                    break }
                                0 == c.banner.postroll.total && b.off("timeupdate", b.vast.timeUpdateToPostroll) }
                            "ready" == c.banner.status && b.trigger("readyforpreroll") } }, getOverlayContent: function() {
                    if ("wait" == c.banner.status) {
                        for (var a = 0; a < c.banner.overlay.length; a++)
                            if ("ready" === c.banner.overlay[a].status) {
                                if (c.banner.tracking_vast = c.banner.overlay[a].trackingEvent, c.durationAd = c.banner.overlay[a].duration, c.banner.ClickTracking = c.banner.overlay[a].ClickTracking, c.banner.ClickThrough = c.banner.overlay[a].ClickThrough, b.vast.sources = c.banner.overlay[a].vast_src, c.banner.overlay.total--, c.banner.overlay[a].vast_src) { c.banner.status = "ready";
                                    break }
                                0 == c.banner.preroll.total && (b.on("timeupdate", b.vast.timeUpdateToMidroll), c.banner.current = "midroll") }
                            "ready" == c.banner.status && b.trigger("readyforoverlay") } }, preroll: function() {
                    if ("ready" == c.banner.status) { c.banner.status = "playing", b.ads.startLinearAdMode(), b.vast.showControls = b.controls(), b.vast.showControls && b.controls(!1), b.src(b.vast.sources);
                        var e = a.document.createElement("a");
                        e.setAttribute("id", "vast_blocker"), e.className = "vast-blocker", c.banner.ClickThrough.length > 0 ? (e.href = c.banner.ClickThrough[0].tracking, e.target = "_blank") : e.href = "javascript:void(0)", e.onclick = function() {
                            return b.paused() && "#" != e.href ? (b.play(), !1) : (c.banner.ClickTracking && d(c.banner.ClickTracking), void b.trigger("adclick")) }, b.vast.blocker = e, b.el().insertBefore(e, b.controlBar.el());
                        var g = a.document.createElement("div");
                        g.setAttribute("id", "skip_button"), g.className = "vast-skip-button", c.skip <= 0 && (g.style.display = "none"), b.vast.skipButton = g, b.el().appendChild(g);
                        var h = a.document.createElement("div");
                        h.className = "vast-duration", b.vast.durationTag = h, b.el().appendChild(h), b.on("timeupdate", b.vast.timeupdate), g.onclick = function(a) {
                            (" " + b.vast.skipButton.className + " ").indexOf(" enabled ") >= 0 && ("undefined" != typeof c.banner.tracking_vast.skip && f(c.banner.tracking_vast.skip), b.vast.tearDown()) }, b.on("timeupdate", b.vast.timeUpdateToTracking), b.one("ended", b.vast.tearDown), b.trigger("vast-preroll-ready") } }, overlay: function() {
                    if ("ready" == c.banner.status) { c.banner.status = "playing";
                        var e = a.document.createElement("div");
                        e.setAttribute("id", "wrapper-overlay"), e.className = "wrapper-overlay", b.el().insertBefore(e, b.controlBar.el()), b.vast.wrapperOverlay = e;
                        var g = a.document.createElement("div");
                        g.className = "overlay-blocker", e.appendChild(g);
                        var h = a.document.createElement("div");
                        h.className = "container-overlay", g.appendChild(h);
                        var i = a.document.createElement("div");
                        i.className = "close_button", h.appendChild(i);
                        var j = a.document.createElement("div");
                        j.className = "minimize_button", h.appendChild(j), j.style.visibility = "hidden";
                        var k = a.document.createElement("a");
                        c.banner.ClickThrough.length > 0 && (k.href = c.banner.ClickThrough[0].tracking, k.target = "_blank"), h.appendChild(k);
                        var l = a.document.createElement("img");
                        l.className = "img-overlay-blocker", l.src = b.vast.sources, k.appendChild(l), k.onclick = function(e) {
                            return c.banner.ClickTracking && d(c.banner.ClickTracking), b.paused() || b.pause(), void 0 !== a.Event.prototype.stopPropagation && void e.stopPropagation() }, i.onclick = function(b) {
                            return k.style.display = "none", i.style.visibility = "hidden", j.style.visibility = "visible", "undefined" != typeof c.banner.tracking_vast.close && f(c.banner.tracking_vast.close), "undefined" != typeof c.banner.tracking_vast.collapse && f(c.banner.tracking_vast.collapse), void 0 !== a.Event.prototype.stopPropagation && void b.stopPropagation() }, j.onclick = function(b) {
                            return k.style.display = "block", i.style.visibility = "visible", j.style.visibility = "hidden", "undefined" != typeof c.banner.tracking_vast.expand && f(c.banner.tracking_vast.expand), void 0 !== a.Event.prototype.stopPropagation && void b.stopPropagation() }, b.off("timeupdate", b.vast.timeUpdateToStartOverlay), b.on("timeupdate", b.vast.timeUpdateToTracking), b.on("timeupdate", b.vast.timeUpdateToEndOverlay) } }, endOverlay: function() { "playing" == c.banner.status && (b.vast.wrapperOverlay.parentNode.removeChild(b.vast.wrapperOverlay), a.document.getElementById("wrapper-overlay") && a.document.getElementById("wrapper-overlay").remove(), b.off("timeupdate", b.vast.timeUpdateToTracking), b.off("timeupdate", b.vast.timeUpdateToEndOverlay), c.banner.status = "wait", c.banner.overlay.total > 0 && b.on("timeupdate", b.vast.timeUpdateToStartOverlay)) }, tearDown: function() { "playing" == c.banner.status && (c.banner.status = "wait", b.vast.skipButton.parentNode.removeChild(b.vast.skipButton), b.vast.durationTag.parentNode.removeChild(b.vast.durationTag), b.vast.blocker.parentNode.removeChild(b.vast.blocker), a.document.getElementById("skip_button") && a.document.getElementById("skip_button").remove(), a.document.getElementById("vast_blocker") && a.document.getElementById("vast_blocker").remove(), b.off("timeupdate", b.vast.timeupdate), b.off("ended", b.vast.tearDown), b.off("timeupdate", b.vast.timeUpdateToTracking), b.ads.endLinearAdMode(), b.controls(!0), "preroll" === c.banner.current ? 0 == c.banner.preroll.total ? (b.trigger("vast-preroll-removed"), b.on("timeupdate", b.vast.timeUpdateToMidroll), c.banner.current = "midroll") : b.trigger("vast-preroll-playagaint") : "midroll" === c.banner.current ? 0 == c.banner.midroll.total && (b.off("timeupdate", b.vast.timeUpdateToMidroll), b.on("timeupdate", b.vast.timeUpdateToPostroll), b.trigger("vast-preroll-removed"), c.banner.current = "postroll") : "postroll" === c.banner.current && 0 == c.banner.postroll.total && (b.off("timeupdate", b.vast.timeUpdateToPostroll), b.trigger("vast-preroll-removed"))) }, timeupdate: function(a) {
                    if ("playing" == c.banner.status) { b.loadingSpinner.el().style.display = "none";
                        var d = Math.ceil(c.skip - b.currentTime());
                        if (d > 0 ? b.vast.skipButton.innerHTML = "<span>Bỏ qua sau</span>&nbsp;<b>" + d + "s</b>" : (" " + b.vast.skipButton.className + " ").indexOf(" enabled ") === -1 && (b.vast.skipButton.className += " enabled", b.vast.skipButton.textContent = "Bỏ qua"), c.durationAd > 0) {
                            var e = Math.ceil(c.durationAd - b.currentTime());
                            b.vast.durationTag.textContent = "Quảng cáo: " + e + " giây" } } }, timeUpdateToMidroll: function(a) {
                    if ("wait" == c.banner.status && "midroll" == c.banner.current) {
                        for (var d = !1, e = 0; e < c.banner.midroll.length; e++)
                            if ("wait" === c.banner.midroll[e].status) { c.banner.midroll[e].startTime < b.duration() && (d = !0);
                                var f = Math.ceil(c.banner.midroll[e].startTime - b.currentTime());
                                f < 0 && (c.banner.midroll[e].status = "ready", b.trigger("readyformidroll")) }
                        0 == d && (b.off("timeupdate", b.vast.timeUpdateToMidroll), c.banner.current = "postroll") } }, timeUpdateToPostroll: function(a) {
                    if ("wait" == c.banner.status && "postroll" == c.banner.current) {
                        var d = b.duration() - b.currentTime() - .5;
                        d < 0 && b.trigger("readyforpostroll") } }, timeUpdateToStartOverlay: function(a) {
                    if ("wait" == c.banner.status) {
                        for (var d = !1, e = 0; e < c.banner.overlay.length; e++)
                            if ("wait" === c.banner.overlay[e].status) { c.banner.overlay[e].startTime < b.duration() && (d = !0);
                                var f = Math.ceil(c.banner.overlay[e].startTime - b.currentTime());
                                f < 0 && (c.banner.overlay[e].status = "ready", b.vast.getOverlayContent()) }
                        0 == d && b.off("timeupdate", b.vast.timeUpdateToStartOverlay) } }, timeUpdateToEndOverlay: function(a) {
                    if ("playing" == c.banner.status)
                        for (var d = 0; d < c.banner.overlay.length; d++)
                            if ("ready" === c.banner.overlay[d].status) {
                                var e = Math.ceil(c.banner.overlay[d].endTime - b.currentTime());
                                e < 0 && (c.banner.overlay[d].status = "end", b.vast.endOverlay()) } }, timeUpdateToTracking: function(a) {
                    if ("playing" == c.banner.status) {
                        var d = c.banner.tracking_vast;
                        for (var e in d)
                            if (0 == d[e].is_track && d[e].time != -1) {
                                var g = d[e].time - 1 - b.currentTime();
                                g < 0 && (f(d[e].link), d[e].is_track = 1, delete d[e]) } } } } },
        q = function(b) {
            var c = this,
                d = n({}, o, b || {});
            if (void 0 === c.ads) return a.console.error("vast video plugin requires videojs-contrib-ads, vast plugin not initialized"), null;
            if (c.vast = new p(c, d), c.on("pause", function() { c.bigPlayButton.show() }), c.on("play", function() { c.bigPlayButton.hide() }), c.on("vast-ready", function() { c.trigger("adsready") }), c.on("vast-preroll-ready", function() { c.load(), c.play() }), c.on("vast-preroll-removed", function() { "postroll" != d.banner.current && c.play() }), c.on("vast-preroll-playagaint", function() { c.vast.getPrerollContent(), c.vast.preroll() }), c.on("contentupdate", function() {}), c.on("readyforpreroll", function() { c.vast.preroll() }), c.on("readyformidroll", function() { c.vast.getMidrollContent() }), c.on("readyforpostroll", function() { c.vast.getPostrollContent() }), c.on("readyforoverlay", function() { c.vast.overlay() }), c.on("check-preroll-data", function() {
                    var a = !!navigator.userAgent.match(/(iPad|iPhone|iPod)/g);
                    0 !== d.banner.overlay.total && a === !1 && c.on("timeupdate", c.vast.timeUpdateToStartOverlay), 0 === d.banner.preroll.total ? (c.trigger("prerollNotExist"), c.trigger("adend"), 0 !== d.banner.midroll.total ? (c.on("timeupdate", c.vast.timeUpdateToMidroll), d.banner.current = "midroll") : 0 !== d.banner.postroll.total && (c.on("timeupdate", c.vast.timeUpdateToPostroll), d.banner.current = "postroll")) : c.trigger("prerollExist"), "wait" == d.banner.status && "preroll" == d.banner.current && c.vast.getPrerollContent() }), c.currentSrc()) {
                var e = new XMLHttpRequest;
                e.onreadystatechange = function() {
                    if (4 === e.readyState) {
                        var a = e.responseText;
                        if (d.banner = { preroll: [], midroll: [], postroll: [], overlay: [], current: "preroll", status: "wait" }, "200" != e.status) return d.banner.preroll.total = 0, d.banner.midroll.total = 0, d.banner.postroll.total = 0, d.banner.overlay.total = 0, !1;
                        for (var b = JSON.parse(a), c = 0; c < b.ads.schedule.length; c++)
                            if ("pre-roll" == b.ads.schedule[c].position) {
                                var f = 0,
                                    g = b.ads.schedule[c].skipoffset;
                                if (g) {
                                    var h = g.split(":");
                                    f = 60 * +h[0] * 60 + 60 * +h[1] + +h[2] }
                                d.banner.preroll.push({ status: "wait", skipoffset: f ? f : 0, vast: b.ads.schedule[c].server.tag, unParseTracking: [], ClickTracking: [], ClickThrough: [], trackingEvent: [], duration: 0 }) } else if ("mid-roll" == b.ads.schedule[c].position) {
                            var i = 0,
                                j = b.ads.schedule[c].startTime;
                            if (j) {
                                var h = j.split(":");
                                i = 60 * +h[0] * 60 + 60 * +h[1] + +h[2] }
                            var f = 0;
                            if (g) {
                                var h = g.split(":");
                                f = 60 * +h[0] * 60 + 60 * +h[1] + +h[2] }
                            d.banner.midroll.push({ status: "wait", startTime: i, skipoffset: f ? f : 0, vast: b.ads.schedule[c].server.tag, unParseTracking: [], ClickTracking: [], ClickThrough: [], trackingEvent: [], duration: 0 }) } else if ("post-roll" == b.ads.schedule[c].position) {
                            var f = 0;
                            if (g) {
                                var h = g.split(":");
                                f = 60 * +h[0] * 60 + 60 * +h[1] + +h[2] }
                            d.banner.postroll.push({ status: "wait", skipoffset: f ? f : 0, vast: b.ads.schedule[c].server.tag, unParseTracking: [], ClickTracking: [], ClickThrough: [], trackingEvent: [], duration: 0 }) } else {
                            var g = b.ads.schedule[c].startTime,
                                h = g.split(":"),
                                i = 60 * +h[0] * 60 + 60 * +h[1] + +h[2];
                            d.banner.overlay.push({ status: "wait", duration: b.ads.schedule[c].duration, startTime: i, endTime: b.ads.schedule[c].duration + i, vast: b.ads.schedule[c].server.tag, unParseTracking: [], ClickTracking: [], ClickThrough: [], trackingEvent: [] }) }
                        d.banner.preroll.total = d.banner.preroll.length, d.banner.midroll.total = d.banner.midroll.length, d.banner.postroll.total = d.banner.postroll.length, d.banner.overlay.total = d.banner.overlay.length;
                        for (var k = 0; k < d.banner.preroll.length; k++) m(d.banner.preroll[k], d.banner.preroll[k].vast);
                        for (var k = 0; k < d.banner.midroll.length; k++) m(d.banner.midroll[k], d.banner.midroll[k].vast);
                        for (var k = 0; k < d.banner.postroll.length; k++) m(d.banner.postroll[k], d.banner.postroll[k].vast);
                        for (var k = 0; k < d.banner.overlay.length; k++) m(d.banner.overlay[k], d.banner.overlay[k].vast) } }, e.open("GET", d.url, !0), e.withCredentials = !0, e.send(null) }
            return c };
    b.plugin("vast", q) }(window, videojs);
